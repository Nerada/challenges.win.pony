<Window x:Class="Pony.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:l="clr-namespace:Pony.Support"
        xmlns:viewModels="clr-namespace:Pony.ViewModels"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
        Title="{Binding WindowTitle, UpdateSourceTrigger=PropertyChanged}"
        ResizeMode="NoResize"
        SizeToContent="WidthAndHeight">
    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBox Text="{Binding Status, UpdateSourceTrigger=PropertyChanged}"
                         Foreground="{Binding StatusColor, UpdateSourceTrigger=PropertyChanged}"
                         Background="Transparent" FontWeight="Bold" IsReadOnly="True" BorderThickness="0" />
            </StatusBarItem>
        </StatusBar>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="20" />
                <RowDefinition Height="20" />
                <RowDefinition Height="30" />
                <RowDefinition Height="0" />
                <RowDefinition Height="40" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0"
                   Content="{Binding LabelPlayerName, UpdateSourceTrigger=PropertyChanged}"
                   Style="{DynamicResource LabelStyle}" />
            <TextBox x:Name="TxtPlayerName" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="5"
                     Text="{Binding PlayerName, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"
                     Margin="0,0,6,0">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ValidPlayerName, UpdateSourceTrigger=PropertyChanged}"
                                         Value="False">
                                <Setter Property="BorderBrush" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <Label Grid.Row="1" Grid.Column="0" Content="{Binding LabelMazeWidth, UpdateSourceTrigger=PropertyChanged}"
                   Style="{DynamicResource LabelStyle}" />
            <TextBox x:Name="TxtWidth" Grid.Row="1" Grid.Column="1"
                     Text="{Binding MazeWidth, UpdateSourceTrigger=PropertyChanged}" Width="20"
                     Validation.ErrorTemplate="{x:Null}">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ValidMazeWidth, UpdateSourceTrigger=PropertyChanged}"
                                         Value="False">
                                <Setter Property="BorderBrush" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <Label Grid.Row="1" Grid.Column="2"
                   Content="{Binding LabelMazeHeight, UpdateSourceTrigger=PropertyChanged}"
                   Style="{DynamicResource LabelStyle}" />
            <TextBox x:Name="TxtHeight" Grid.Row="1" Grid.Column="3"
                     Text="{Binding MazeHeight, UpdateSourceTrigger=PropertyChanged}" Width="20"
                     Validation.ErrorTemplate="{x:Null}">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ValidMazeHeight, UpdateSourceTrigger=PropertyChanged}"
                                         Value="False">
                                <Setter Property="BorderBrush" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <Label Grid.Row="1" Grid.Column="4"
                   Content="{Binding LabelMazeDifficulty, UpdateSourceTrigger=PropertyChanged}"
                   Style="{DynamicResource LabelStyle}" />
            <TextBox x:Name="TxtDifficulty" Grid.Row="1" Grid.Column="5"
                     Text="{Binding MazeDifficulty, UpdateSourceTrigger=PropertyChanged}" Width="20"
                     HorizontalAlignment="Left" Margin="0,0,6,0">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ValidMazeDifficulty, UpdateSourceTrigger=PropertyChanged}"
                                         Value="False">
                                <Setter Property="BorderBrush" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <TextBox Grid.Row="2" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="6" IsReadOnly="True"
                     BorderThickness="0" Cursor="Arrow" />

            <Button Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="6" Command="{Binding StartGameCommand}"
                    Content="{Binding StartGameButtonContent, UpdateSourceTrigger=PropertyChanged}"
                    Click="Button_Click" />

            <l:LimitChild Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="6">
                <TextBox x:Name="TxtRestInfo" ScrollViewer.HorizontalScrollBarVisibility="Visible" IsReadOnly="True"
                         MinWidth="247" MinHeight="350"
                         Text="{Binding RestStatus, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                         TextWrapping="Wrap" Padding="5" BorderThickness="0" HorizontalAlignment="Left">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Up" Command="{Binding WalkCommand}" CommandParameter="north" />
                        <KeyBinding Key="W" Command="{Binding WalkCommand}" CommandParameter="north" />
                        <KeyBinding Key="Right" Command="{Binding WalkCommand}" CommandParameter="east" />
                        <KeyBinding Key="D" Command="{Binding WalkCommand}" CommandParameter="east" />
                        <KeyBinding Key="Down" Command="{Binding WalkCommand}" CommandParameter="south" />
                        <KeyBinding Key="S" Command="{Binding WalkCommand}" CommandParameter="south" />
                        <KeyBinding Key="Left" Command="{Binding WalkCommand}" CommandParameter="west" />
                        <KeyBinding Key="A" Command="{Binding WalkCommand}" CommandParameter="west" />
                    </TextBox.InputBindings>
                </TextBox>
            </l:LimitChild>

            <TextBlock Grid.Row="0" Grid.Column="6" Grid.RowSpan="6" Background="LightSalmon"
                       Text="{Binding MazeStatus, UpdateSourceTrigger=PropertyChanged}" FontFamily="Courier New">
                <TextBlock.InputBindings>
                    <KeyBinding Key="Up" Command="{Binding WalkCommand}" CommandParameter="north" />
                    <KeyBinding Key="W" Command="{Binding WalkCommand}" CommandParameter="north" />
                    <KeyBinding Key="Right" Command="{Binding WalkCommand}" CommandParameter="east" />
                    <KeyBinding Key="D" Command="{Binding WalkCommand}" CommandParameter="east" />
                    <KeyBinding Key="Down" Command="{Binding WalkCommand}" CommandParameter="south" />
                    <KeyBinding Key="S" Command="{Binding WalkCommand}" CommandParameter="south" />
                    <KeyBinding Key="Left" Command="{Binding WalkCommand}" CommandParameter="west" />
                    <KeyBinding Key="A" Command="{Binding WalkCommand}" CommandParameter="west" />
                </TextBlock.InputBindings>
            </TextBlock>
        </Grid>
    </DockPanel>
</Window>